{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\GFGHACKATHON\\\\client\\\\src\\\\components\\\\MyFoodlogs.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyFoodlogs = (qty, Unit, food, Calories, date, id, isUser) => {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(CustomTableCell, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            align: \"right\",\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            align: \"right\",\n            children: \"Food (Unit)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            align: \"right\",\n            children: \"Calories (g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            align: \"right\",\n            children: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          className: classes.row,\n          children: [/*#__PURE__*/_jsxDEV(CustomTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            align: \"right\",\n            children: row.calories\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            align: \"right\",\n            children: row.fat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            align: \"right\",\n            children: row.carbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            align: \"right\",\n            children: row.protein\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n_c = MyFoodlogs;\nexport default MyFoodlogs;\nvar _c;\n$RefreshReg$(_c, \"MyFoodlogs\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MyFoodlogs","qty","Unit","food","Calories","date","id","isUser","Paper","className","classes","root","children","Table","table","TableHead","TableRow","CustomTableCell","fileName","_jsxFileName","lineNumber","columnNumber","align","TableBody","rows","map","row","component","scope","name","calories","fat","carbs","protein","_c","$RefreshReg$"],"sources":["C:/Users/hp/GFGHACKATHON/client/src/components/MyFoodlogs.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst MyFoodlogs = (qty,Unit,food,Calories,date,id,isUser) => {\r\n  \r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <CustomTableCell>Quantity</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Unit</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Food (Unit)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">Calories (g)</CustomTableCell>\r\n              <CustomTableCell align=\"right\">date</CustomTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map(row => (\r\n              <TableRow className={classes.row} key={row.id}>\r\n                <CustomTableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.calories}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.fat}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.carbs}</CustomTableCell>\r\n                <CustomTableCell align=\"right\">{row.protein}</CustomTableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  \r\n}\r\n\r\nexport default MyFoodlogs"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}