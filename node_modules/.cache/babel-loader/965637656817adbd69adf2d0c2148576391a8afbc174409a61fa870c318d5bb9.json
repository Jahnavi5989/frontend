{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\GFGHACKATHON\\\\client\\\\src\\\\components\\\\Exercises.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Pagination, Typography, Box, Stack } from '@mui/material';\nimport ExerciseCard from './ExerciseCard';\nimport { exerciseOptions, fetchData } from '../utils/fetchdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercises = _ref => {\n  _s();\n  let {\n    exercises,\n    setExercises,\n    bodyPart\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisePerpage = 9;\n  const indexOfLastExercise = currentPage * exercisePerpage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisePerpage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n  const paginate = (e, val) => {\n    setCurrentPage(val);\n    window.scrollTo({\n      top: 1800,\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    const fetchExerciseData = async () => {\n      let exercisesData = [];\n      if (bodyPart === 'all') {\n        exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises', exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/$(bodyPart)`, exerciseOptions);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: '110px'\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: '110px',\n          xs: '50px'\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, index) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      mt: \"100px\",\n      alignItems: \"center\",\n      children: exercises.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"standard\",\n        shape: \"rounded\",\n        defaultPage: 1,\n        count: Math.ceil(exercises.length / 9),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"bbUJKqvz37TyBucdH0QrrAeFuLM=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Typography","Box","Stack","ExerciseCard","exerciseOptions","fetchData","jsxDEV","_jsxDEV","Exercises","_ref","_s","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisePerpage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","e","val","window","scrollTo","top","behavior","fetchExerciseData","exercisesData","id","sx","mt","lg","p","children","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","xs","flexWrap","justifyContent","map","exercise","index","alignItems","length","color","shape","defaultPage","count","Math","ceil","page","onChange","size","_c","$RefreshReg$"],"sources":["C:/Users/hp/GFGHACKATHON/client/src/components/Exercises.js"],"sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport { Pagination, Typography, Box, Stack } from '@mui/material'\r\nimport ExerciseCard from './ExerciseCard'\r\nimport { exerciseOptions,fetchData } from '../utils/fetchdata';\r\nconst Exercises = ({exercises,setExercises,bodyPart}) => {\r\n  const[currentPage,setCurrentPage]=useState(1)\r\n  const exercisePerpage=9;\r\n  const indexOfLastExercise=currentPage*exercisePerpage\r\n  const indexOfFirstExercise = indexOfLastExercise-exercisePerpage;\r\n  const  currentExercises = exercises.slice\r\n  (indexOfFirstExercise,indexOfLastExercise)\r\n  const paginate = (e,val)=>{\r\n    setCurrentPage(val);\r\n    window.scrollTo({top:1800,behavior:'smooth'})\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const fetchExerciseData = async () =>{\r\n      let exercisesData=[]\r\n      if(bodyPart==='all'){\r\n        exercisesData=await fetchData('https://exercisedb.p.rapidapi.com/exercises',exerciseOptions);\r\n      }else{\r\n        exercisesData=await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/$(bodyPart)`,exerciseOptions)\r\n      }\r\n    }\r\n  })\r\n  return (\r\n    <Box id=\"exercises\"\r\n    sx={{mt:{lg:'110px'}}}\r\n    mt=\"50px\"\r\n    p=\"20px\"\r\n    >\r\n      <Typography>\r\n        Showing Results\r\n      </Typography>\r\n      <Stack direction=\"row\" sx={{gap:{lg:'110px',xs:'50px'}}} flexWrap=\"wrap\" justifyContent=\"center\">\r\n          {currentExercises.map((exercise,index)=>(\r\n            <ExerciseCard key={index} exercise={exercise}/>\r\n          ))}\r\n      </Stack>\r\n      <Stack mt=\"100px\" alignItems=\"center\">\r\n            {\r\n              exercises.length>9 && (\r\n                <Pagination\r\n                  color=\"standard\"\r\n                  shape=\"rounded\"\r\n                  defaultPage={1}\r\n                  count={Math.ceil(exercises.length/9)}\r\n                  page={currentPage}\r\n                  onChange={paginate}\r\n                  size=\"large\"\r\n\r\n                />\r\n              )\r\n            }\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Exercises"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}