{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\GFGHACKATHON\\\\client\\\\src\\\\components\\\\ReceipeSearch.js\",\n  _s = $RefreshSig$();\n// const submitHandler = e=>{\n//     e.preventDefault();\n//     fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${Inputs.foodname}&app_id=6f7d5d7d&app_key=2106a213f50d52abc70d40a9956d371c&diet==${Inputs.diet}&health==${Inputs.health}&cuisineType==${Inputs.cuisineType}&mealType==${Inputs.mealType}&dishType==${Inputs.dishType}&calories==${Inputs.calories}&imageSize=REGULAR&random=true&field=image`).then(\n//         response=> response.json()\n//     ).then(data=>console.log(data))\n\n// }\nimport react from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst diets = ['balanced', 'high-fiber', 'high-protein', 'low-carb', 'low-fat', 'low-sodium'];\nconst health = ['alcohol-cocktail', 'alcohol-free', 'celery-free', 'crustacean-free', 'dairy-free', 'egg-free', 'fish-free', 'fodmap', 'gluten-free', 'lupine-free', 'mollusk-free', 'mustard-free', 'no-oil-Added', 'peanut-free', 'vegan', 'vegetarian', 'wheat-free'];\nconst cuisineType = ['American', 'Asian', 'British', 'Caribbean', 'Central Europe', 'Chinese', 'Eastern Europe', 'French', 'Indian', 'Italian', 'Japanese', 'Kosher', 'Mediterranean', 'Mexican', 'Middle Eastern', 'Nordic', 'South American', 'South East Asian'];\nconst mealType = ['Breakfast', 'Dinner', 'Lunch', 'Snack', 'Teatime'];\nconst dishType = ['Side dish', 'Soup', 'Starter', 'Sweets', 'Biscuits and cookies', 'Bread', 'Cereals', 'Condiments and sauces', 'Desserts', 'Drinks', 'Main Course', 'Pancake', ' Preps', 'Preserve', 'Salad', 'Sandwiches'];\nfunction getStyles(health, healthTypes, theme) {\n  return {\n    fontWeight: healthTypes.indexOf(health) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\n//   function getStyles(diets, dietTypes, theme) {\n//     return {\n//       fontWeight:\n//         dietTypes.indexOf(diets) === -1\n//           ? theme.typography.fontWeightRegular\n//           : theme.typography.fontWeightMedium,\n//     };\n//   }\n//   function getStyles(health, healthTypes, theme) {\n//     return {\n//       fontWeight:\n//         healthTypes.indexOf(health) === -1\n//           ? theme.typography.fontWeightRegular\n//           : theme.typography.fontWeightMedium,\n//     };\n//   }\n//   function getStyles(health, healthTypes, theme) {\n//     return {\n//       fontWeight:\n//         healthTypes.indexOf(health) === -1\n//           ? theme.typography.fontWeightRegular\n//           : theme.typography.fontWeightMedium,\n//     };\n//   }\n//   function getStyles(health, healthTypes, theme) {\n//     return {\n//       fontWeight:\n//         healthTypes.indexOf(health) === -1\n//           ? theme.typography.fontWeightRegular\n//           : theme.typography.fontWeightMedium,\n//     };\n//   }\n\nconst ReceipeSearch = () => {\n  _s();\n  const theme = useTheme();\n  const [healthTypes, sethealthTypes] = useState([]);\n  const [Diets, setDiets] = useState([]);\n  const [meal, setMeal] = useState([]);\n  const [dish, setDish] = useState([]);\n  const [cuisine, setCuisine] = useState([]);\n  const handleChangehealth = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    sethealthTypes(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  const handleChangediets = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setDiets(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  const handleChangemeal = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setMeal(\n    // On autofill we get a stringified value.\n    value);\n  };\n  const handleChangeDish = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setDish(\n    // On autofill we get a stringified value.\n    value);\n  };\n  const handleCusine = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setCuisine(\n    // On autofill we get a stringified value.\n    value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        displayEmpty: true,\n        value: healthTypes,\n        onChange: handleChangehealth,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Allergies/healthTypes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 22\n            }, this);\n          }\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Allergies/healthTypes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), health.map(health => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: health,\n          style: getStyles(health, healthTypes, theme),\n          children: health\n        }, health, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        displayEmpty: true,\n        value: Diets,\n        onChange: handleChangediets,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"DietTypes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 22\n            }, this);\n          }\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"DietTypes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), diets.map(diet => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: diet,\n          style: getStyles(diet, Diets, theme),\n          children: diet\n        }, diet, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        displayEmpty: true,\n        value: meal,\n        onChange: handleChangemeal,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"MealTypes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 22\n            }, this);\n          }\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"MealTypes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), mealType.map(meal => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: meal,\n          style: getStyles(meal, mealType, theme),\n          children: meal\n        }, meal, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        displayEmpty: true,\n        value: dish,\n        onChange: handleChangeDish,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"dishType\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 22\n            }, this);\n          }\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"dishType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), dishType.map(dish => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: dish,\n          style: getStyles(dish, dishType, theme),\n          children: dish\n        }, dish, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        displayEmpty: true,\n        value: cuisine,\n        onChange: handleCusine,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => {\n          if (selected.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"cuisineType\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 22\n            }, this);\n          }\n          return selected.join(', ');\n        },\n        MenuProps: MenuProps,\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"cuisineType\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), cuisineType.map(cuisine => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: cuisine,\n          style: getStyles(cuisine, cuisineType, theme),\n          children: cuisine\n        }, cuisine, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n};\n_s(ReceipeSearch, \"CdU7LKMmxg/MtjT+uguYh8pQLKo=\", false, function () {\n  return [useTheme];\n});\n_c = ReceipeSearch;\nexport default ReceipeSearch;\nvar _c;\n$RefreshReg$(_c, \"ReceipeSearch\");","map":{"version":3,"names":["react","useTheme","OutlinedInput","MenuItem","FormControl","Select","useState","jsxDEV","_jsxDEV","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","diets","health","cuisineType","mealType","dishType","getStyles","healthTypes","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","ReceipeSearch","_s","sethealthTypes","Diets","setDiets","meal","setMeal","dish","setDish","cuisine","setCuisine","handleChangehealth","event","target","value","split","handleChangediets","handleChangemeal","handleChangeDish","handleCusine","children","sx","m","mt","multiple","displayEmpty","onChange","input","fileName","_jsxFileName","lineNumber","columnNumber","renderValue","selected","length","join","inputProps","disabled","map","diet","_c","$RefreshReg$"],"sources":["C:/Users/hp/GFGHACKATHON/client/src/components/ReceipeSearch.js"],"sourcesContent":["    // const submitHandler = e=>{\r\n    //     e.preventDefault();\r\n    //     fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${Inputs.foodname}&app_id=6f7d5d7d&app_key=2106a213f50d52abc70d40a9956d371c&diet==${Inputs.diet}&health==${Inputs.health}&cuisineType==${Inputs.cuisineType}&mealType==${Inputs.mealType}&dishType==${Inputs.dishType}&calories==${Inputs.calories}&imageSize=REGULAR&random=true&field=image`).then(\r\n    //         response=> response.json()\r\n    //     ).then(data=>console.log(data))\r\n       \r\n    // }\r\nimport  react from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { useState } from 'react';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n    const diets = [\r\n        'balanced',\r\n        'high-fiber',\r\n        'high-protein',\r\n        'low-carb',\r\n        'low-fat',\r\n        'low-sodium',\r\n      ];\r\n\r\n    const health = [\r\n        'alcohol-cocktail',\r\n        'alcohol-free',\r\n        'celery-free',\r\n        'crustacean-free',\r\n        'dairy-free',\r\n        'egg-free',\r\n        'fish-free',\r\n        'fodmap',\r\n        'gluten-free',\r\n        'lupine-free',\r\n        'mollusk-free',\r\n        'mustard-free',\r\n        'no-oil-Added',\r\n        'peanut-free',\r\n        'vegan',\r\n        'vegetarian',\r\n        'wheat-free',\r\n ]\r\n\r\n const cuisineType =[\r\n    'American',\r\n    'Asian',\r\n    'British',\r\n    'Caribbean',\r\n    'Central Europe',\r\n    'Chinese',\r\n    'Eastern Europe',\r\n    'French',\r\n    'Indian',\r\n    'Italian',\r\n    'Japanese',\r\n    'Kosher',\r\n    'Mediterranean',\r\n     'Mexican',\r\n     'Middle Eastern',\r\n     'Nordic',\r\n     'South American',\r\n     'South East Asian',\r\n ]\r\n\r\n const mealType= [\r\n    'Breakfast',\r\n    'Dinner',\r\n    'Lunch',\r\n    'Snack',\r\n    'Teatime',\r\n\r\n ]\r\n\r\n const dishType = [\r\n    'Side dish',\r\n    'Soup',\r\n    'Starter',\r\n    'Sweets',\r\n    'Biscuits and cookies',\r\n    'Bread',\r\n    'Cereals',\r\n    'Condiments and sauces',\r\n    'Desserts',\r\n    'Drinks',\r\n    'Main Course',\r\n    'Pancake',\r\n   ' Preps',\r\n    'Preserve',\r\n    'Salad',\r\n    'Sandwiches'\r\n\r\n ]\r\n\r\n function getStyles(health, healthTypes, theme) {\r\n    return {\r\n      fontWeight:\r\n        healthTypes.indexOf(health) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n\r\n//   function getStyles(diets, dietTypes, theme) {\r\n//     return {\r\n//       fontWeight:\r\n//         dietTypes.indexOf(diets) === -1\r\n//           ? theme.typography.fontWeightRegular\r\n//           : theme.typography.fontWeightMedium,\r\n//     };\r\n//   }\r\n//   function getStyles(health, healthTypes, theme) {\r\n//     return {\r\n//       fontWeight:\r\n//         healthTypes.indexOf(health) === -1\r\n//           ? theme.typography.fontWeightRegular\r\n//           : theme.typography.fontWeightMedium,\r\n//     };\r\n//   }\r\n//   function getStyles(health, healthTypes, theme) {\r\n//     return {\r\n//       fontWeight:\r\n//         healthTypes.indexOf(health) === -1\r\n//           ? theme.typography.fontWeightRegular\r\n//           : theme.typography.fontWeightMedium,\r\n//     };\r\n//   }\r\n//   function getStyles(health, healthTypes, theme) {\r\n//     return {\r\n//       fontWeight:\r\n//         healthTypes.indexOf(health) === -1\r\n//           ? theme.typography.fontWeightRegular\r\n//           : theme.typography.fontWeightMedium,\r\n//     };\r\n//   }\r\n    \r\n    const ReceipeSearch = () => {\r\n        const theme = useTheme();\r\n        const [healthTypes, sethealthTypes] = useState([]);\r\n        const [Diets, setDiets] = useState([]);\r\n        const [meal, setMeal] = useState([]);\r\n        const [dish, setDish] = useState([]);\r\n        const [cuisine, setCuisine] = useState([]);\r\n      \r\n        const handleChangehealth = (event) => {\r\n          const {\r\n            target: { value },\r\n          } = event;\r\n          sethealthTypes(\r\n            // On autofill we get a stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n          );\r\n        };\r\n        const handleChangediets = (event) => {\r\n            const {\r\n              target: { value },\r\n            } = event;\r\n            setDiets(\r\n              // On autofill we get a stringified value.\r\n              typeof value === 'string' ? value.split(',') : value,\r\n            );\r\n          };\r\n          const handleChangemeal = (event) => {\r\n            const {\r\n              target: { value },\r\n            } = event;\r\n            setMeal(\r\n              // On autofill we get a stringified value.\r\n              value\r\n            );\r\n          };\r\n          const handleChangeDish = (event) => {\r\n            const {\r\n              target: { value },\r\n            } = event;\r\n            setDish(\r\n              // On autofill we get a stringified value.\r\n              value\r\n            );\r\n          };\r\n          const handleCusine = (event) => {\r\n            const {\r\n              target: { value },\r\n            } = event;\r\n            setCuisine(\r\n              // On autofill we get a stringified value.\r\n             value\r\n            );\r\n          };\r\n      \r\n      return (\r\n        <div>\r\n      <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={healthTypes}\r\n          onChange={handleChangehealth}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>Allergies/healthTypes</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Allergies/healthTypes</em>\r\n          </MenuItem>\r\n          {health.map((health) => (\r\n            <MenuItem\r\n              key={health}\r\n              value={health}\r\n              style={getStyles(health, healthTypes, theme)}\r\n            >\r\n              {health}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={Diets}\r\n          onChange={handleChangediets}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>DietTypes</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>DietTypes</em>\r\n          </MenuItem>\r\n          {diets.map((diet) => (\r\n            <MenuItem\r\n              key={diet}\r\n              value={diet}\r\n              style={getStyles(diet, Diets, theme)}\r\n            >\r\n              {diet}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={meal}\r\n          onChange={handleChangemeal}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>MealTypes</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>MealTypes</em>\r\n          </MenuItem>\r\n          {mealType.map((meal) => (\r\n            <MenuItem\r\n              key={meal}\r\n              value={meal}\r\n              style={getStyles(meal, mealType, theme)}\r\n            >\r\n              {meal}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={dish}\r\n          onChange={handleChangeDish}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>dishType</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>dishType</em>\r\n          </MenuItem>\r\n          {dishType.map((dish) => (\r\n            <MenuItem\r\n              key={dish}\r\n              value={dish}\r\n              style={getStyles(dish, dishType, theme)}\r\n            >\r\n              {dish}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <Select\r\n          multiple\r\n          displayEmpty\r\n          value={cuisine}\r\n          onChange={handleCusine}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>cuisineType</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>cuisineType</em>\r\n          </MenuItem>\r\n          {cuisineType.map((cuisine) => (\r\n            <MenuItem\r\n              key={cuisine}\r\n              value={cuisine}\r\n              style={getStyles(cuisine, cuisineType, theme)}\r\n            >\r\n              {cuisine}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      \r\n      </FormControl>\r\n      \r\n    </div>\r\n      )\r\n    }\r\n    \r\n    export default ReceipeSearch"],"mappings":";;AAAI;AACA;AACA;AACA;AACA;;AAEA;AACJ,OAAQA,KAAK,MAAM,OAAO;AAC1B,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,gBAAgB,GAAG,CAAC;AAC1B,MAAMC,SAAS,GAAG;EAChBC,UAAU,EAAE;IACVC,KAAK,EAAE;MACLC,SAAS,EAAEL,WAAW,GAAG,GAAG,GAAGC,gBAAgB;MAC/CK,KAAK,EAAE;IACT;EACF;AACF,CAAC;AAEG,MAAMC,KAAK,GAAG,CACV,UAAU,EACV,YAAY,EACZ,cAAc,EACd,UAAU,EACV,SAAS,EACT,YAAY,CACb;AAEH,MAAMC,MAAM,GAAG,CACX,kBAAkB,EAClB,cAAc,EACd,aAAa,EACb,iBAAiB,EACjB,YAAY,EACZ,UAAU,EACV,WAAW,EACX,QAAQ,EACR,aAAa,EACb,aAAa,EACb,cAAc,EACd,cAAc,EACd,cAAc,EACd,aAAa,EACb,OAAO,EACP,YAAY,EACZ,YAAY,CAClB;AAED,MAAMC,WAAW,GAAE,CAChB,UAAU,EACV,OAAO,EACP,SAAS,EACT,WAAW,EACX,gBAAgB,EAChB,SAAS,EACT,gBAAgB,EAChB,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,UAAU,EACV,QAAQ,EACR,eAAe,EACd,SAAS,EACT,gBAAgB,EAChB,QAAQ,EACR,gBAAgB,EAChB,kBAAkB,CACrB;AAED,MAAMC,QAAQ,GAAE,CACb,WAAW,EACX,QAAQ,EACR,OAAO,EACP,OAAO,EACP,SAAS,CAEX;AAED,MAAMC,QAAQ,GAAG,CACd,WAAW,EACX,MAAM,EACN,SAAS,EACT,QAAQ,EACR,sBAAsB,EACtB,OAAO,EACP,SAAS,EACT,uBAAuB,EACvB,UAAU,EACV,QAAQ,EACR,aAAa,EACb,SAAS,EACV,QAAQ,EACP,UAAU,EACV,OAAO,EACP,YAAY,CAEd;AAED,SAASC,SAASA,CAACJ,MAAM,EAAEK,WAAW,EAAEC,KAAK,EAAE;EAC5C,OAAO;IACLC,UAAU,EACRF,WAAW,CAACG,OAAO,CAACR,MAAM,CAAC,KAAK,CAAC,CAAC,GAC9BM,KAAK,CAACG,UAAU,CAACC,iBAAiB,GAClCJ,KAAK,CAACG,UAAU,CAACE;EACzB,CAAC;AACH;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMP,KAAK,GAAGtB,QAAQ,EAAE;EACxB,MAAM,CAACqB,WAAW,EAAES,cAAc,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,IAAI,EAAEC,OAAO,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC8B,IAAI,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkC,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAM;MACJC,MAAM,EAAE;QAAEC;MAAM;IAClB,CAAC,GAAGF,KAAK;IACTV,cAAc;IACZ;IACA,OAAOY,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,GAAGD,KAAK,CACrD;EACH,CAAC;EACD,MAAME,iBAAiB,GAAIJ,KAAK,IAAK;IACjC,MAAM;MACJC,MAAM,EAAE;QAAEC;MAAM;IAClB,CAAC,GAAGF,KAAK;IACTR,QAAQ;IACN;IACA,OAAOU,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,GAAGD,KAAK,CACrD;EACH,CAAC;EACD,MAAMG,gBAAgB,GAAIL,KAAK,IAAK;IAClC,MAAM;MACJC,MAAM,EAAE;QAAEC;MAAM;IAClB,CAAC,GAAGF,KAAK;IACTN,OAAO;IACL;IACAQ,KAAK,CACN;EACH,CAAC;EACD,MAAMI,gBAAgB,GAAIN,KAAK,IAAK;IAClC,MAAM;MACJC,MAAM,EAAE;QAAEC;MAAM;IAClB,CAAC,GAAGF,KAAK;IACTJ,OAAO;IACL;IACAM,KAAK,CACN;EACH,CAAC;EACD,MAAMK,YAAY,GAAIP,KAAK,IAAK;IAC9B,MAAM;MACJC,MAAM,EAAE;QAAEC;MAAM;IAClB,CAAC,GAAGF,KAAK;IACTF,UAAU;IACR;IACDI,KAAK,CACL;EACH,CAAC;EAEL,oBACEnC,OAAA;IAAAyC,QAAA,eACFzC,OAAA,CAACJ,WAAW;MAAC8C,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEpC,KAAK,EAAE,GAAG;QAAEqC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBAC3CzC,OAAA,CAACH,MAAM;QACLgD,QAAQ;QACRC,YAAY;QACZX,KAAK,EAAErB,WAAY;QACnBiC,QAAQ,EAAEf,kBAAmB;QAC7BgB,KAAK,eAAEhD,OAAA,CAACN,aAAa;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;QACzBC,WAAW,EAAGC,QAAQ,IAAK;UACzB,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;YACzB,oBAAOvD,OAAA;cAAAyC,QAAA,EAAI;YAAqB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UACvC;UAEA,OAAOE,QAAQ,CAACE,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAE;QACFrD,SAAS,EAAEA,SAAU;QACrBsD,UAAU,EAAE;UAAE,YAAY,EAAE;QAAgB,CAAE;QAAAhB,QAAA,gBAE9CzC,OAAA,CAACL,QAAQ;UAAC+D,QAAQ;UAACvB,KAAK,EAAC,EAAE;UAAAM,QAAA,eACzBzC,OAAA;YAAAyC,QAAA,EAAI;UAAqB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrB,EACV3C,MAAM,CAACkD,GAAG,CAAElD,MAAM,iBACjBT,OAAA,CAACL,QAAQ;UAEPwC,KAAK,EAAE1B,MAAO;UACdJ,KAAK,EAAEQ,SAAS,CAACJ,MAAM,EAAEK,WAAW,EAAEC,KAAK,CAAE;UAAA0B,QAAA,EAE5ChC;QAAM,GAJFA,MAAM;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAMd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK,eACTpD,OAAA,CAACH,MAAM;QACLgD,QAAQ;QACRC,YAAY;QACZX,KAAK,EAAEX,KAAM;QACbuB,QAAQ,EAAEV,iBAAkB;QAC5BW,KAAK,eAAEhD,OAAA,CAACN,aAAa;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;QACzBC,WAAW,EAAGC,QAAQ,IAAK;UACzB,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;YACzB,oBAAOvD,OAAA;cAAAyC,QAAA,EAAI;YAAS;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAC3B;UAEA,OAAOE,QAAQ,CAACE,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAE;QACFrD,SAAS,EAAEA,SAAU;QACrBsD,UAAU,EAAE;UAAE,YAAY,EAAE;QAAgB,CAAE;QAAAhB,QAAA,gBAE9CzC,OAAA,CAACL,QAAQ;UAAC+D,QAAQ;UAACvB,KAAK,EAAC,EAAE;UAAAM,QAAA,eACzBzC,OAAA;YAAAyC,QAAA,EAAI;UAAS;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACT,EACV5C,KAAK,CAACmD,GAAG,CAAEC,IAAI,iBACd5D,OAAA,CAACL,QAAQ;UAEPwC,KAAK,EAAEyB,IAAK;UACZvD,KAAK,EAAEQ,SAAS,CAAC+C,IAAI,EAAEpC,KAAK,EAAET,KAAK,CAAE;UAAA0B,QAAA,EAEpCmB;QAAI,GAJAA,IAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAMZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK,eAGTpD,OAAA,CAACH,MAAM;QACLgD,QAAQ;QACRC,YAAY;QACZX,KAAK,EAAET,IAAK;QACZqB,QAAQ,EAAET,gBAAiB;QAC3BU,KAAK,eAAEhD,OAAA,CAACN,aAAa;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;QACzBC,WAAW,EAAGC,QAAQ,IAAK;UACzB,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;YACzB,oBAAOvD,OAAA;cAAAyC,QAAA,EAAI;YAAS;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAC3B;UAEA,OAAOE,QAAQ,CAACE,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAE;QACFrD,SAAS,EAAEA,SAAU;QACrBsD,UAAU,EAAE;UAAE,YAAY,EAAE;QAAgB,CAAE;QAAAhB,QAAA,gBAE9CzC,OAAA,CAACL,QAAQ;UAAC+D,QAAQ;UAACvB,KAAK,EAAC,EAAE;UAAAM,QAAA,eACzBzC,OAAA;YAAAyC,QAAA,EAAI;UAAS;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACT,EACVzC,QAAQ,CAACgD,GAAG,CAAEjC,IAAI,iBACjB1B,OAAA,CAACL,QAAQ;UAEPwC,KAAK,EAAET,IAAK;UACZrB,KAAK,EAAEQ,SAAS,CAACa,IAAI,EAAEf,QAAQ,EAAEI,KAAK,CAAE;UAAA0B,QAAA,EAEvCf;QAAI,GAJAA,IAAI;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAMZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK,eAGTpD,OAAA,CAACH,MAAM;QACLgD,QAAQ;QACRC,YAAY;QACZX,KAAK,EAAEP,IAAK;QACZmB,QAAQ,EAAER,gBAAiB;QAC3BS,KAAK,eAAEhD,OAAA,CAACN,aAAa;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;QACzBC,WAAW,EAAGC,QAAQ,IAAK;UACzB,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;YACzB,oBAAOvD,OAAA;cAAAyC,QAAA,EAAI;YAAQ;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAC1B;UAEA,OAAOE,QAAQ,CAACE,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAE;QACFrD,SAAS,EAAEA,SAAU;QACrBsD,UAAU,EAAE;UAAE,YAAY,EAAE;QAAgB,CAAE;QAAAhB,QAAA,gBAE9CzC,OAAA,CAACL,QAAQ;UAAC+D,QAAQ;UAACvB,KAAK,EAAC,EAAE;UAAAM,QAAA,eACzBzC,OAAA;YAAAyC,QAAA,EAAI;UAAQ;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACR,EACVxC,QAAQ,CAAC+C,GAAG,CAAE/B,IAAI,iBACjB5B,OAAA,CAACL,QAAQ;UAEPwC,KAAK,EAAEP,IAAK;UACZvB,KAAK,EAAEQ,SAAS,CAACe,IAAI,EAAEhB,QAAQ,EAAEG,KAAK,CAAE;UAAA0B,QAAA,EAEvCb;QAAI,GAJAA,IAAI;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAMZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK,eAETpD,OAAA,CAACH,MAAM;QACLgD,QAAQ;QACRC,YAAY;QACZX,KAAK,EAAEL,OAAQ;QACfiB,QAAQ,EAAEP,YAAa;QACvBQ,KAAK,eAAEhD,OAAA,CAACN,aAAa;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;QACzBC,WAAW,EAAGC,QAAQ,IAAK;UACzB,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;YACzB,oBAAOvD,OAAA;cAAAyC,QAAA,EAAI;YAAW;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK;UAC7B;UAEA,OAAOE,QAAQ,CAACE,IAAI,CAAC,IAAI,CAAC;QAC5B,CAAE;QACFrD,SAAS,EAAEA,SAAU;QACrBsD,UAAU,EAAE;UAAE,YAAY,EAAE;QAAgB,CAAE;QAAAhB,QAAA,gBAE9CzC,OAAA,CAACL,QAAQ;UAAC+D,QAAQ;UAACvB,KAAK,EAAC,EAAE;UAAAM,QAAA,eACzBzC,OAAA;YAAAyC,QAAA,EAAI;UAAW;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACX,EACV1C,WAAW,CAACiD,GAAG,CAAE7B,OAAO,iBACvB9B,OAAA,CAACL,QAAQ;UAEPwC,KAAK,EAAEL,OAAQ;UACfzB,KAAK,EAAEQ,SAAS,CAACiB,OAAO,EAAEpB,WAAW,EAAEK,KAAK,CAAE;UAAA0B,QAAA,EAE7CX;QAAO,GAJHA,OAAO;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAMf,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEV;AAEN,CAAC;AAAA9B,EAAA,CApNKD,aAAa;EAAA,QACD5B,QAAQ;AAAA;AAAAoE,EAAA,GADpBxC,aAAa;AAsNnB,eAAeA,aAAa;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}