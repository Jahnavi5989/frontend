[{"C:\\Users\\hp\\GFGHACKATHON\\client\\src\\index.js":"1","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\App.js":"2","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\pages\\ExerciseDetail.js":"3","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\pages\\Home.js":"4","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Navbar.js":"5","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\HeroBanner.js":"6","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Exercises.js":"7","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\SearchExercises.js":"8","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\utils\\fetchdata.js":"9","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Register.js":"10","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Login.js":"11","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Dashboard.js":"12","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\MyProfile.js":"13","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Foodlogs.js":"14","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\MyFoodlogs.js":"15","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Foodlog.js":"16","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\NutritionAnalysis.js":"17","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Analysis.js":"18","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\ReceipeSearch.js":"19","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Recipes.js":"20","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Profile.js":"21","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Myprofile.js":"22","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\HorizontalScrollbar.js":"23","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\BodyPart.js":"24","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\ExerciseCard.js":"25","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Calorielogs.js":"26","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Calorielog.js":"27","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\MyCalorielogs.js":"28"},{"size":485,"mtime":1679632904981,"results":"29","hashOfConfig":"30"},{"size":2057,"mtime":1681485770610,"results":"31","hashOfConfig":"30"},{"size":143,"mtime":1679632698875,"results":"32","hashOfConfig":"30"},{"size":986,"mtime":1681481537010,"results":"33","hashOfConfig":"30"},{"size":1019,"mtime":1681316747465,"results":"34","hashOfConfig":"30"},{"size":1241,"mtime":1680617994992,"results":"35","hashOfConfig":"30"},{"size":2083,"mtime":1681482915539,"results":"36","hashOfConfig":"30"},{"size":2878,"mtime":1681470507830,"results":"37","hashOfConfig":"30"},{"size":407,"mtime":1681462846559,"results":"38","hashOfConfig":"30"},{"size":3260,"mtime":1681486284215,"results":"39","hashOfConfig":"30"},{"size":3185,"mtime":1680801437215,"results":"40","hashOfConfig":"30"},{"size":2947,"mtime":1681486391832,"results":"41","hashOfConfig":"30"},{"size":0,"mtime":1680620113976,"results":"42","hashOfConfig":"30"},{"size":3055,"mtime":1681358914502,"results":"43","hashOfConfig":"30"},{"size":2457,"mtime":1681476916218,"results":"44","hashOfConfig":"30"},{"size":1246,"mtime":1681476683303,"results":"45","hashOfConfig":"30"},{"size":2006,"mtime":1681475404328,"results":"46","hashOfConfig":"30"},{"size":3592,"mtime":1681444710216,"results":"47","hashOfConfig":"30"},{"size":14411,"mtime":1681476571879,"results":"48","hashOfConfig":"30"},{"size":3738,"mtime":1681476763405,"results":"49","hashOfConfig":"30"},{"size":1618,"mtime":1681457459791,"results":"50","hashOfConfig":"30"},{"size":725,"mtime":1681457470573,"results":"51","hashOfConfig":"30"},{"size":631,"mtime":1681471808930,"results":"52","hashOfConfig":"30"},{"size":1015,"mtime":1681473126258,"results":"53","hashOfConfig":"30"},{"size":973,"mtime":1681479020739,"results":"54","hashOfConfig":"30"},{"size":3443,"mtime":1681486080038,"results":"55","hashOfConfig":"30"},{"size":1355,"mtime":1681485597273,"results":"56","hashOfConfig":"30"},{"size":2458,"mtime":1681486141366,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v11f5j",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},"C:\\Users\\hp\\GFGHACKATHON\\client\\src\\index.js",[],[],"C:\\Users\\hp\\GFGHACKATHON\\client\\src\\App.js",["162","163","164","165"],[],"import React from 'react'\nimport { createContext,useState } from 'react';\nimport {Route,Routes} from 'react-router-dom';\nimport {Box} from '@mui/material';\nimport './App.css';\nimport ExerciseDetail from './pages/ExerciseDetail';\nimport Home from './pages/Home';\nimport Navbar from './components/Navbar'\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport Foodlogs from './components/Foodlogs';\nimport MyFoodlogs from './components/MyFoodlogs';\nimport Foodlog from './components/Foodlog';\nimport NutritionAnalysis from './components/NutritionAnalysis';\nimport Analysis from './components/Analysis';\nimport Myprofile from './components/Myprofile';\nimport Calorielog from './components/Calorielog';\nimport ReceipeSearch from './components/ReceipeSearch';\nimport Calorielogs from './components/Calorielogs';\n\nexport const store = createContext();\nconst App = () => {\n  const [token,setToken]=useState(null);\n  return (\n    <Box width=\"400px\" sx={{ width:{x1:'1488px'}}} m=\"auto\">\n      <store.Provider value={[token,setToken]}>\n      <Routes>\n        <Route path='/home' element={<Home/>}/>\n        <Route path=\"/\" element={<Register/>}/>\n        <Route path=\"/login\" element={<Login/>}/>\n        <Route path=\"/Foodlogs\" element={<Foodlogs/>}/>//Addfoodlog\n        <Route path=\"/Foodlog\" element={<Foodlog/>}/>//view foodlogs\n        <Route path=\"/Dashboard\" element={<Dashboard/>}/>\n        {/* <Route path=\"/MyFoodlogs\" element={<MyFoodlogs/>}/> */}\n        <Route path=\"/exercise/:id\" element={<ExerciseDetail/>}/>\n        <Route path=\"/calorieslogs\" element={<Calorielogs/>}/>\n        <Route path=\"/calorieslog\" element={<Calorielog/>}/>\n        <Route path=\"/nutritionanalysis\" element={<NutritionAnalysis/>}/>\n        <Route path=\"/myprofile\" element={<Myprofile/>}/>\n        <Route path=\"/analysis\" element={<Analysis/>}/>\n        <Route path=\"/searchreceipe\" element={<ReceipeSearch/>}/>\n      </Routes>\n      </store.Provider>\n    </Box>\n  )\n}\n\nexport default App","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\pages\\ExerciseDetail.js",[],[],"C:\\Users\\hp\\GFGHACKATHON\\client\\src\\pages\\Home.js",["166"],[],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport {Box} from '@mui/material';\r\nimport HeroBanner from '../components/HeroBanner';\r\nimport SearchExercises from '../components/SearchExercises';\r\nimport Exercises from '../components/Exercises';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  const userid=localStorage.getItem(\"userId\");\r\n  const navigate = useNavigate();\r\n  const [bodyPart,setBodyPart]=useState('all');\r\n  const [exercises,setExercises]=useState([]);\r\n  console.log(bodyPart)\r\n  if(!userid){\r\n\r\n    \r\n    return(\r\n    \r\n    alert(\"Please login again\")\r\n   \r\n   \r\n    )\r\n  }\r\n  return (\r\n   <Box>\r\n    \r\n        <HeroBanner/>\r\n        <SearchExercises\r\n        setExercises={setExercises}\r\n        bodyPart={bodyPart}\r\n        setBodyPart={setBodyPart}/>\r\n        <Exercises\r\n        setExercises={setExercises}\r\n        bodyPart={bodyPart}\r\n        exercises={exercises}/>\r\n      \r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Home;","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Navbar.js",[],[],"C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\HeroBanner.js",["167","168"],[],"import { Button, Typography } from '@mui/material'\r\nimport { Box } from '@mui/material'\r\nimport React from 'react'\r\nimport sideimage from '../assets/image.jpg'\r\nimport Register from './Register'\r\nimport Dashboard from './Dashboard'\r\n\r\nconst HeroBanner = () => {\r\n  return (\r\n    <Box sx={{\r\n        mt:{lg:'212px',x5:'70px'},\r\n        ml:{sm:'50px'}\r\n    }} position='relative' p=\"20px\">\r\n        <Typography fontWeight=\"600\" fontsize=\"26px\">\r\n        Fitness for Every Body\r\n        </Typography>\r\n        <Typography fontWeight={500} color=\"#00008B\" sx={{fontSize:{lg:'44px',xs:'40px'}}}>\r\n        The Path to a Better You,<br/> Starts Here  \r\n        </Typography>\r\n        <Typography fontSize=\"22px\" lineHeight={\"35px\"}>\r\n            Explore Fitness \r\n        </Typography>\r\n        <Button variant='contained' mb={3} sx={{backgroundColor:'#7EC8E3',padding:'150'}} href=\"/DashBoard\" >My DashBoard</Button>\r\n        <Typography fontWeight={600}\r\n        color=\"#7EC8E3\"\r\n        sx={{\r\n            opacity: 0.1,\r\n            display:{lg:'block',xs:\"none\"}\r\n        }}\r\n        fontSize='200px'>FitMinds</Typography>\r\n        <img src={sideimage} alt=\"banner\" className=\"hero-banner-img\"/>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default HeroBanner","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Exercises.js",["169"],[],"import React,{useEffect, useState} from 'react'\r\nimport { Pagination, Typography, Box, Stack } from '@mui/material'\r\nimport ExerciseCard from './ExerciseCard'\r\nimport { exerciseOptions,fetchData } from '../utils/fetchdata';\r\nconst Exercises = ({exercises,setExercises,bodyPart}) => {\r\n  const[currentPage,setCurrentPage]=useState(1)\r\n  const exercisePerpage=9;\r\n  const indexOfLastExercise=currentPage*exercisePerpage\r\n  const indexOfFirstExercise = indexOfLastExercise-exercisePerpage;\r\n  const  currentExercises = exercises.slice\r\n  (indexOfFirstExercise,indexOfLastExercise)\r\n  const paginate = (e,val)=>{\r\n    setCurrentPage(val);\r\n    window.scrollTo({top:1800,behavior:'smooth'})\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const fetchExerciseData = async () =>{\r\n      let exercisesData=[];\r\n      if(bodyPart==='all'){\r\n        exercisesData=await fetchData('https://exercisedb.p.rapidapi.com/exercises',exerciseOptions);\r\n      }else{\r\n        exercisesData=await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`,exerciseOptions);\r\n      }\r\n      setExercises(exercisesData)\r\n    }\r\n    fetchExerciseData()\r\n  },[bodyPart])\r\n  return (\r\n    <Box id=\"exercises\"\r\n    sx={{mt:{lg:'110px'}}}\r\n    mt=\"50px\"\r\n    p=\"20px\"\r\n    >\r\n      <Typography>\r\n        Showing Results\r\n      </Typography>\r\n      <Stack direction=\"row\" sx={{gap:{lg:'110px',xs:'50px'}}} flexWrap=\"wrap\" justifyContent=\"center\">\r\n          {currentExercises.map((exercise,index)=>(\r\n            <ExerciseCard key={index} exercise={exercise}/>\r\n          ))}\r\n      </Stack>\r\n      <Stack mt=\"100px\" alignItems=\"center\">\r\n            {\r\n              exercises.length>9 && (\r\n                <Pagination\r\n                  color=\"standard\"\r\n                  shape=\"rounded\"\r\n                  defaultPage={1}\r\n                  count={Math.ceil(exercises.length/9)}\r\n                  page={currentPage}\r\n                  onChange={paginate}\r\n                  size=\"large\"\r\n\r\n                />\r\n              )\r\n            }\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Exercises","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\SearchExercises.js",["170","171","172"],[],"import React, { useInsertionEffect } from 'react'\r\nimport { useEffect,useState } from 'react';\r\nimport {Box,Button,Stack,TextField,Typography} from \"@mui/material\"\r\nimport { textTransform } from '@mui/system';\r\nimport { exerciseOptions,fetchData } from '../utils/fetchdata';\r\nimport HorizontalScrollbar from './HorizontalScrollbar';\r\n\r\nconst SearchExercises = ({setExercises,bodyPart,setBodyPart}) => {\r\n    const[search,setSearch]=useState('');\r\n    const[bodyParts,setBodyparts] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchExerciseData = async()=>{\r\n            const bodyPartsData = await fetchData('https://exercisedb.p.rapidapi.com/exercises/bodyPartList',exerciseOptions)\r\n            setBodyparts(['all', ...bodyPartsData]);\r\n            \r\n        }\r\n        fetchExerciseData();\r\n        console.log(bodyParts)\r\n    },[])\r\n    const handleSearch=async()=>{\r\n        if(search){\r\n            const exercisesData = await fetchData('https://exercisedb.p.rapidapi.com/exercises',exerciseOptions);\r\n            const SearchedExercises = exercisesData.filter(\r\n                (exercise)=>exercise.name?.toLowerCase().includes(search)\r\n                || exercise.target?.toLowerCase().includes(search)\r\n                || exercise.equipment?.toLowerCase().includes(search)\r\n                || exercise.bodyPart?.toLowerCase().includes(search)\r\n            );\r\n           \r\n            setSearch('');\r\n            setExercises(SearchedExercises);//56:44\r\n        }\r\n    }\r\n  return (\r\n    <Stack alignItems=\"center\" mt=\"37px\" justifyContent={'center'} p=\"20px\"> \r\n    <Typography fontWeight={700} sx={{fontSize:{lg:'44px',xs:'30px'}}} mb='50px' textAlign={\"center\"}>Exercises You should know</Typography>\r\n    <Box position={\"relative\"} mb=\"72px\">\r\n        <TextField\r\n        sx={{\r\n            input:{\r\n                fontWeight:'700',\r\n                border:'none',\r\n                borderRadius:'4px'\r\n            },\r\n            width:{lg:'800px',xs:\"350px\"},\r\n            backgroundColor:'#fff',\r\n            borderRadius:\"40px\"\r\n        }}\r\n        height=\"76px\"\r\n        value={search}\r\n        onChange={(e)=>setSearch(e.target.value.toLowerCase())}\r\n        placeholder=\"Search Exercises\"\r\n        type=\"text\"\r\n        />\r\n        <Button className='search-btn'\r\n        sx={{\r\n            bgcolor:\"#0000FF\",\r\n            color:\"#fff\",\r\n            textTransform:\"none\",\r\n            width:{lg:\"175px\",xs:'80px'},\r\n            fontSize:{lg:'20px',xs:'14px'},\r\n            height:\"56px\",\r\n            position:\"absolute\", \r\n        }}\r\n        onClick={handleSearch}\r\n        >\r\n            Search\r\n        </Button>\r\n    </Box>\r\n    <Box sx={{position:'relative',width:'100%',p:'20px'}}>\r\n         <HorizontalScrollbar data={bodyParts} bodyPart={bodyPart} setBodyPart={setBodyPart}/>\r\n    </Box>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default SearchExercises","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\utils\\fetchdata.js",[],[],"C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Register.js",["173"],[],"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Button, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport Login from './Login'\r\n\r\nconst Register = () =>  {\r\n  const [data,setData]=React.useState({\r\n    name:'',\r\n    email:'',\r\n    password:''\r\n  })\r\n  const changehandler=e=>{\r\n    setData({...data,[e.target.name]:e.target.value})\r\n  }\r\n  const submitHandler=e=>{\r\n    e.preventDefault();\r\n    axios.post('http://localhost:5000/register',data).then(\r\n      res => alert(\"registered\")\r\n    )\r\n  }\r\n  return (\r\n    <Box>\r\n      <div>\r\n      <Typography fontWeight={50} sx={{fontSize:{lg:'30px',xs:'20px'}}} mt='50px'textAlign={\"center\"}>RegisterNow</Typography>\r\n        <TextField\r\n          sx={{\r\n            input:{\r\n                fontWeight:'700',\r\n                border:'none',\r\n                borderRadius:'4px',\r\n                \r\n            },\r\n            width:{lg:'400px',xs:\"350px\"},\r\n            backgroundColor:'#fff',\r\n            borderRadius:\"40px\",\r\n            mx: 'auto',\r\n            ml:60,\r\n            mb:5,\r\n            mt:2,\r\n          textAlign: 'center',\r\n          fontSize: '0.875rem',\r\n          fontWeight: '700'\r\n        }}\r\n          required\r\n          id=\"outlined-required\"\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          onChange={changehandler}\r\n          name=\"name\"\r\n          placeholder='Full Name'\r\n        /><br/>\r\n        <TextField\r\n        sx={{\r\n          input:{\r\n              fontWeight:'700',\r\n              border:'none',\r\n              borderRadius:'4px'\r\n          },\r\n          width:{lg:'400px',xs:\"350px\"},\r\n          backgroundColor:'#fff',\r\n          borderRadius:\"40px\",\r\n          mx: 'auto',\r\n          ml:60,\r\n          mb:5,\r\n          mt:1,\r\n        textAlign: 'center',\r\n        fontSize: '0.875rem',\r\n        fontWeight: '700'\r\n      }}\r\n          id=\"outlined-required\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={changehandler}\r\n          placeholder='Email'\r\n        /><br/>\r\n        <TextField\r\n        sx={{\r\n          input:{\r\n              fontWeight:'700',\r\n              border:'none',\r\n              borderRadius:'4px'\r\n          },\r\n          width:{lg:'400px',xs:\"350px\"},\r\n          backgroundColor:'#fff',\r\n          borderRadius:\"40px\",\r\n          mx: 'auto',\r\n            ml:60,\r\n            mb:5,\r\n            mt:1,\r\n          textAlign: 'center',\r\n          fontSize: '0.875rem',\r\n          fontWeight: '700'\r\n      }}\r\n          id=\"outlined-password-input\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={changehandler}\r\n          autoComplete=\"current-password\"\r\n        /><br/>\r\n        <Box textAlign={'center'} ml={10}>\r\n           <Button variant='contained' ml={40}  sx={{backgroundColor:'#7EC8E3',padding:'150', width:{lg:'400px',xs:\"300px\"},}} onClick={submitHandler}>Register now</Button><br/>\r\n           <Button variant='contained' mb={3} sx={{backgroundColor:'#7EC8E3',padding:'150',width:{lg:'400px',xs:\"300px\"},}} href=\"Login\" >Already Registered</Button>\r\n        </Box>\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n\r\n\r\nexport default Register","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Login.js",["174","175","176","177","178"],[],"import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Button, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useContext } from 'react';\r\nimport { store } from '../App';\r\nimport { redirect } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nimport Home from '../pages/Home'\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    const[token,setToken]=useContext(store)\r\n    const [data,setData]=React.useState({\r\n        email:'',\r\n        password:''\r\n      })\r\n      const changehandler=e=>{\r\n        setData({...data,[e.target.name]:e.target.value})\r\n      }\r\n      const  submitHandler =e=>{\r\n        e.preventDefault();\r\n        axios.post('http://localhost:5000/login',data).then(\r\n          res=>(localStorage.setItem(\"userId\",res.data.user._id),localStorage.setItem(\"usertoken\",res.data.token),setToken(res.data.token))\r\n        )\r\n        if(token){\r\n        \r\n            return navigate('/Home')\r\n         }\r\n      }\r\n     \r\n      return (\r\n        <Box>\r\n          <div>\r\n          <Typography fontWeight={50} sx={{fontSize:{lg:'30px',xs:'20px'}}} mt='50px'textAlign={\"center\"}>Login</Typography>\r\n            <TextField\r\n            sx={{\r\n              input:{\r\n                  fontWeight:'700',\r\n                  border:'none',\r\n                  borderRadius:'4px'\r\n              },\r\n              width:{lg:'400px',xs:\"350px\"},\r\n              backgroundColor:'#fff',\r\n              borderRadius:\"40px\",\r\n              mx: 'auto',\r\n              ml:60,\r\n              mb:5,\r\n              mt:1,\r\n            textAlign: 'center',\r\n            fontSize: '0.875rem',\r\n            fontWeight: '700'\r\n          }}\r\n              id=\"outlined-required\"\r\n              label=\"Required\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={changehandler}\r\n              placeholder='Email'\r\n            /><br/>\r\n            <TextField\r\n            sx={{\r\n              input:{\r\n                  fontWeight:'700',\r\n                  border:'none',\r\n                  borderRadius:'4px'\r\n              },\r\n              width:{lg:'400px',xs:\"350px\"},\r\n              backgroundColor:'#fff',\r\n              borderRadius:\"40px\",\r\n              mx: 'auto',\r\n                ml:60,\r\n                mb:5,\r\n                mt:1,\r\n              textAlign: 'center',\r\n              fontSize: '0.875rem',\r\n              fontWeight: '700'\r\n          }}\r\n              id=\"outlined-password-input\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={changehandler}\r\n              autoComplete=\"current-password\"\r\n            /><br/>\r\n            \r\n            <Box textAlign={'center'} ml={10}>\r\n               <Button variant='contained' ml={40}  sx={{backgroundColor:'#7EC8E3',padding:'150', width:{lg:'400px',xs:\"300px\"},}} onClick={submitHandler}>Login</Button><br/>\r\n            </Box>\r\n          </div>\r\n        </Box>\r\n      );\r\n  \r\n}\r\n\r\nexport default Login","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Dashboard.js",["179","180","181"],[],"import React, { useState } from 'react'\r\nimport Navbar from './Navbar'\r\nimport {Link} from 'react-router-dom';\r\nimport { Box, Stack } from '@mui/material';\r\nimport {Button} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport sideimage from '../assets/bg.jpg'\r\nimport Myprofile from './Myprofile';\r\nimport{ Typography} from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const userId = localStorage.getItem(\"userId\")\r\n  const onClickHandler = (e) => {\r\n\r\n    localStorage.removeItem(\"userId\")\r\n    localStorage.removeItem(\"uesrtoken\")\r\n    alert(\"Logged out succesfully\")\r\n    navigate(\"/\")\r\n\r\n  }\r\n const[ispro,setIspro]=useState(false);\r\n  const onClickhandlerpro = (e)=>{\r\n     //navigate(\"/myprofile\")\r\n    setIspro(true)\r\n  }\r\n  const handleDelete = e =>{\r\n    setIspro(false)\r\n  }\r\n  if(!userId){\r\n    navigate(\"/\")\r\n    alert(\"Login Again\")\r\n   \r\n  }\r\n  return (\r\n   \r\n      <div>\r\n        \r\n        <Stack direction=\"row\"\r\n          gap=\"40px\"  \r\n          fontSize={\"24px\"}\r\n          alignItems=\"flex-end\"\r\n          justifyContent={'none'}\r\n        >\r\n             {userId &&<Link to='/foodlogs' style={{textDecoration:'none',color:\"#3A1212\",borderBottom:'3px solid Darkblue'}}>MyFoodlogs</Link>}\r\n             {userId &&<Link to='/calorieslogs' style={{textDecoration:'none',color:\"#3A1212\",borderBottom:'3px solid Darkblue'}}>Mycalorielogs</Link>}\r\n             {userId &&<Link to='/nutritionanalysis' style={{textDecoration:'none',color:\"#3A1212\",borderBottom:'3px solid Darkblue'}}>NutritionAnalysis</Link>}\r\n             {userId &&<Link to='/searchreceipe' style={{textDecoration:'none',color:\"#3A1212\",borderBottom:'3px solid Darkblue'}}>Diet Receipes </Link>}\r\n            \r\n             {userId &&<a href=\"#exercises\" style={{textDecoration:'none',color:\"#3A1212\"}}>Exercises</a>}\r\n             {userId && <Button variant='contained' mt={10} ml={30} sx={{backgroundColor:'#7EC8E3',padding:'150',width:{lg:'175px',xs:\"75px\"},}} onClick={onClickhandlerpro}  >MyProfile</Button>}\r\n            {userId && <Button variant='contained' mt={10} ml={30} sx={{backgroundColor:'#7EC8E3',padding:'150',width:{lg:'175px',xs:\"75px\"},}} onClick={onClickHandler}  >Logout</Button>}\r\n            \r\n           \r\n        </Stack>\r\n       \r\n        {userId && !ispro && <img src=\"https://media.istockphoto.com/id/1186915680/vector/meditation-concept-illustration.jpg?s=170667a&w=0&k=20&c=A13EIKzn403zN0BxpkeMl9CmVgmpChSCJlO9ZHGfXjQ=\" alt=\"banner\" className=\"hero-banner1-img\"/>}\r\n           \r\n       \r\n       \r\n           {userId&& ispro && <Myprofile/>}\r\n       \r\n          <Box justifyContent={'center'} ml={75}>\r\n           {ispro && <Button variant='contained'onClick={handleDelete}><CloseIcon/></Button>}\r\n          </Box>\r\n        </div>\r\n        \r\n        \r\n      \r\n  )\r\n\r\n          \r\n    \r\n}\r\n\r\nexport default Dashboard","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\MyProfile.js",["182","183","184","185"],[],"C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Foodlogs.js",["186"],[],"import { InputLabel, TextField, Typography, Box, Button } from '@mui/material'\r\nimport axios from 'axios';\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nconst labelStyles={mb:1,mt:2,fontSize:'24px',fontWeight:\"bold\"};\r\nconst AddBlog = () => {\r\n  const navigate = useNavigate();\r\n  const[inputs, setInputs] = useState({\r\n    qty:\"\",Unit:\"\",food:\"\",Calories:\"\",date:\"\"\r\n});\r\nconst handleChange=(e)=>{\r\n  setInputs((prevState)=>({\r\n    ...prevState,\r\n    [e.target.name]:e.target.value\r\n  }));\r\n}\r\nconst sendRequest = async()=>{\r\n  const res=await axios.post(\"http://localhost:5000/foodlogs\",\r\n  {\r\n    qty:inputs.qty,\r\n    Unit: inputs.Unit,\r\n    food: inputs.food,\r\n    Calories:inputs.Calories,\r\n    date:inputs.date,\r\n    user:localStorage.getItem(\"userId\"),\r\n  }).then(()=>navigate(\"/Foodlog\")).catch((err)=>console.log(err));\r\n  const data = await res.data;\r\n  console.log(data)\r\n  return data;\r\n};\r\nconst handleSubmit=(e)=>{\r\n  e.preventDefault();\r\n  //console.log(inputs);\r\n  sendRequest().then(data=>console.log(data))\r\n} \r\nconst onClickhandler=(e)=>{\r\n  navigate(\"/Foodlog\");\r\n}\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n      <Box border={3} borderColor=\"purple \" borderRadius={10} boxShadow=\"10px 10px 20px #ccc\" padding={3} margin={\"auto\"} marginTop={3} display=\"flex\" flexDirection={\"column\"} width={\"80%\"}>\r\n        <Typography fontWeight={'bold'} padding={3} color=\"grey\" variant=\"h2\" textAlign={'center'}>Start logging your meals</Typography>\r\n        <InputLabel sx={labelStyles}>Quantity</InputLabel>\r\n        <TextField name=\"qty\" onChange={handleChange} value={inputs.qty}margin=\"normal\" variant='outlined'/>\r\n        <InputLabel sx={labelStyles}>Unit</InputLabel>\r\n        <TextField name=\"Unit\" onChange={handleChange} value={inputs.Unit} margin=\"normal\"variant='outlined'/>\r\n        <InputLabel sx={labelStyles}>foodName</InputLabel>\r\n        <TextField name=\"food\" onChange={handleChange} value={inputs.food} margin=\"normal\"variant='outlined' />\r\n        <InputLabel sx={labelStyles}>Calories</InputLabel>\r\n        <TextField name=\"Calories\" onChange={handleChange} value={inputs.Calories} margin=\"normal\"variant='outlined' />\r\n        <InputLabel sx={labelStyles}>date</InputLabel>\r\n        <TextField name=\"date\" onChange={handleChange} value={inputs.date} margin=\"normal\"variant='outlined' />\r\n        <Box>\r\n        <Button variant='contained' ml={40}  sx={{backgroundColor:'#7EC8E3',padding:'150', width:{lg:'320px',xs:\"300px\"},}} type=\"submit\">Add</Button>\r\n        <Button variant='contained' mr={40} sx={{backgroundColor:'#7EC8E3',padding:'200', width:{lg:'320px',xs:\"300px\"},}} onClick={onClickhandler} >Go to my foodlogs</Button>\r\n        <Button variant='contained' ml={40}  sx={{backgroundColor:'#7EC8E3',padding:'150', width:{lg:'320px',xs:\"300px\"},}}  href=\"nutritionanalysis\">Go to calories Analysis</Button><br/>\r\n        </Box>\r\n        \r\n      </Box>\r\n    </form>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default AddBlog","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\MyFoodlogs.js",["187"],[],"import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\nimport { Button } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nconst Img = styled('img')({\r\n  margin: 'auto',\r\n  display: 'block',\r\n  maxWidth: '100%',\r\n  maxHeight: '100%',\r\n});\r\n\r\n\r\nconst MyFoodlogs = ({qty,Unit,food,Calories,date,isUser,id}) => {\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n    \r\n  const navigate = useNavigate();\r\n  const deleteRequest= async ()=>{\r\n    const res = await axios.delete(`http://localhost:5000/deletefoodlog/${id}`).catch(err=>console.log(err));\r\n    const data = await res.data;\r\n    return data\r\n  }\r\n  const handleDelete = ()=>{\r\n    deleteRequest().then(()=>navigate(\"/\")).then(()=>navigate(\"/Foodlog\"));\r\n  }\r\n  \r\n  return (\r\n    \r\n    <Paper\r\n    sx={{\r\n      p: 2,\r\n      margin: 'auto',\r\n      maxWidth: 500,\r\n      mb: 10,\r\n      ml: 10,\r\n      flexGrow: 1,\r\n      backgroundColor: (theme) =>\r\n        theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    }}\r\n  >\r\n   \r\n    <Grid container spacing={2}>\r\n      <Grid item>\r\n        <ButtonBase sx={{ width: 128, height: 128 }}>\r\n          <Img alt=\"complex\" src=\"https://img.taste.com.au/1jyDeGmD/w720-h480-cfill-q80/taste/2018/12/broccoli-steaks-with-roasted-chickpeas-tomatoes-and-cashew-dressing-144935-2.jpg\" />\r\n        </ButtonBase>\r\n      </Grid>\r\n      <Grid item xs={12} sm container>\r\n        <Grid item xs container direction=\"column\" spacing={2}>\r\n          <Grid item xs>\r\n            <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\r\n              {food}\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n             {qty}{Unit} \r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n             {Calories} Calories<br/>\r\n             {date}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant='contained' ml={40}  sx={{backgroundColor:'#7EC8E3',padding:'150', width:{lg:'200px',xs:\"100px\"},}} onClick={handleDelete}>Remove</Button><br/>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </Paper>\r\n\r\n\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default MyFoodlogs;","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Foodlog.js",[],[],"C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\NutritionAnalysis.js",["188","189","190"],[],"import React, { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Button, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\nimport Login from './Login'\r\nimport Analysis from './Analysis';\r\nimport {Stack} from '@mui/material';\r\n\r\nconst NutritionAnalysis = () => {\r\n    const [search,setSerach]=useState('');\r\n    const [calories,setCalories]=useState('');\r\n    const submitHandler = e=>{\r\n        e.preventDefault();\r\n        fetch(`https://api.edamam.com/api/nutrition-data?app_id=ad225010&app_key=7a7547d65ee66dc9fb44fb4a0d334f9e&nutrition-type=logging&ingr=${search}`).then(\r\n            response=> response.json()\r\n        ).then(data=>setCalories(data))\r\n       \r\n    }\r\n    console.log(calories)\r\n  return (\r\n    \r\n    <div>\r\n    <Typography fontWeight={50} sx={{fontSize:{lg:'30px',xs:'20px'}}} mt='50px'textAlign={\"center\"}>NutritionAnalysis</Typography>\r\n      <TextField\r\n        sx={{\r\n          input:{\r\n              fontWeight:'700',\r\n              border:'none',\r\n              borderRadius:'4px',\r\n              \r\n          },\r\n          width:{lg:'400px',xs:\"350px\"},\r\n          backgroundColor:'#fff',\r\n          borderRadius:\"40px\",\r\n          mx: 'auto',\r\n          ml:60,\r\n          mb:5,\r\n          mt:2,\r\n        textAlign: 'center',\r\n        fontSize: '0.875rem',\r\n        fontWeight: '700'\r\n      }}\r\n        required\r\n        id=\"outlined-required\"\r\n        label=\"Required\"\r\n        type=\"text\"\r\n        onChange={(e)=>setSerach(e.target.value)}\r\n        value={search}\r\n        placeholder='Full Name'\r\n      /><br/>\r\n      \r\n      <Box textAlign={'center'} ml={10}>\r\n         <Button variant='contained' ml={40}  sx={{backgroundColor:'#7EC8E3',padding:'150', width:{lg:'400px',xs:\"300px\"},}}  onClick={submitHandler}>Analyse</Button><br/>\r\n      </Box>\r\n    \r\n    {calories?<Analysis data={calories} search={search}/>:null }\r\n    \r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default NutritionAnalysis","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Analysis.js",["191","192","193","194","195","196"],[],"import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { Box } from '@mui/material';\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nconst Analysis = ({data,search}) => {\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n    \r\n\r\n\r\n  return (\r\n    <Box textAlign={'center'} ml={60} mt={10}>\r\n    <Card sx={{ maxWidth: 400 }}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"194\"\r\n        image=\"https://image.slidesharecdn.com/foodanalysiscarbohydrates-210625052407/85/carbohydrates-food-analysis-pharmaceutical-analysis-department-mpharmacy-1-320.jpg?cb=1666137942\"\r\n        alt=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n      <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n        {search}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <ExpandMore\r\n          expand={expanded}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </ExpandMore>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        \r\n        <CardContent>\r\n       \r\n        <Typography>\r\n         Total Calories<br/>\r\n         {data.calories} kcal<br/>\r\n         Calories from carbohydrates<br/>\r\n         {data.totalNutrientsKCal.CHOCDF_KCAL.quantity} kcal<br/>\r\n         Total Energy<br/>\r\n         {data.totalNutrientsKCal.ENERC_KCAL.quantity} kcal<br/>\r\n         Calories from fat<br/>\r\n         {data.totalNutrientsKCal.FAT_KCAL.quantity} kcal<br/>\r\n         Calories from protein<br/>\r\n         {data.totalNutrientsKCal.PROCNT_KCAL.quantity} kcal<br/>\r\n         <Typography variant='h5'>Fatty acids<br/></Typography>\r\n         --- {data.totalNutrients.FAMS.label}<br/>\r\n         --- {data.totalNutrients.FAMS.quantity} g<br/>\r\n         --- {data.totalNutrients.FAPU.label} <br/>\r\n         --- {data.totalNutrients.FAPU.quantity} g<br/>\r\n         --- {data.totalNutrients.FASAT.label}<br/>\r\n         --- {data.totalNutrients.FASAT.quantity} g<br/>\r\n         <Typography variant='h5'>Cholestrol<br/></Typography>\r\n         {data.totalNutrients.CHOLE.quantity} {data.totalNutrients.CHOLE.unit}\r\n         <Typography variant='h5'>Fiber<br/></Typography>\r\n         {data.totalNutrients.FIBTG.quantity} {data.totalNutrients.FIBTG.unit}\r\n        </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n   </Box>\r\n  )\r\n}\r\n\r\nexport default Analysis","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\ReceipeSearch.js",["197","198"],[],"    // const submitHandler = e=>{\r\n    //     e.preventDefault();\r\n    //     fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${Inputs.foodname}&app_id=6f7d5d7d&app_key=2106a213f50d52abc70d40a9956d371c&diet==${Inputs.diet}&health==${Inputs.health}&cuisineType==${Inputs.cuisineType}&mealType==${Inputs.mealType}&dishType==${Inputs.dishType}&calories==${Inputs.calories}&imageSize=REGULAR&random=true&field=image`).then(\r\n    //         response=> response.json()\r\n    //     ).then(data=>console.log(data))\r\n       \r\n    // }\r\nimport  react from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport { useState } from 'react';\r\nimport { Button, TextField,Box } from '@mui/material';\r\nimport { Typography } from '@mui/material';\r\nimport Recipes from './Recipes';\r\nimport {Stack }from '@mui/material';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n    const diets = [\r\n        'balanced',\r\n        'high-fiber',\r\n        'high-protein',\r\n        'low-carb',\r\n        'low-fat',\r\n        'low-sodium',\r\n      ];\r\n\r\n    const health = [\r\n        'alcohol-cocktail',\r\n        'alcohol-free',\r\n        'celery-free',\r\n        'crustacean-free',\r\n        'dairy-free',\r\n        'egg-free',\r\n        'fish-free',\r\n        'fodmap',\r\n        'gluten-free',\r\n        'lupine-free',\r\n        'mollusk-free',\r\n        'mustard-free',\r\n        'no-oil-Added',\r\n        'peanut-free',\r\n        'vegan',\r\n        'vegetarian',\r\n        'wheat-free',\r\n ]\r\n\r\n const cuisineType =[\r\n    'American',\r\n    'Asian',\r\n    'British',\r\n    'Caribbean',\r\n    'Central Europe',\r\n    'Chinese',\r\n    'Eastern Europe',\r\n    'French',\r\n    'Indian',\r\n    'Italian',\r\n    'Japanese',\r\n    'Kosher',\r\n    'Mediterranean',\r\n     'Mexican',\r\n     'Middle Eastern',\r\n     'Nordic',\r\n     'South American',\r\n     'South East Asian',\r\n ]\r\n\r\n const mealType= [\r\n    'Breakfast',\r\n    'Dinner',\r\n    'Lunch',\r\n    'Snack',\r\n    'Teatime',\r\n\r\n ]\r\n\r\n const dishType = [\r\n    'Side dish',\r\n    'Soup',\r\n    'Starter',\r\n    'Sweets',\r\n    'Biscuits and cookies',\r\n    'Bread',\r\n    'Cereals',\r\n    'Condiments and sauces',\r\n    'Desserts',\r\n    'Drinks',\r\n    'Main Course',\r\n    'Pancake',\r\n   ' Preps',\r\n    'Preserve',\r\n    'Salad',\r\n    'Sandwiches'\r\n\r\n ]\r\n\r\n function getStyles(health, healthTypes, theme) {\r\n    return {\r\n      fontWeight:\r\n        healthTypes.indexOf(health) === -1\r\n          ? theme.typography.fontWeightRegular\r\n          : theme.typography.fontWeightMedium,\r\n    };\r\n  }\r\n      const ReceipeSearch = () => {\r\n        const[data,setData]=useState([]);\r\n        const submitHandler = e=>{\r\n            e.preventDefault();\r\n            fetch(`https://api.edamam.com/api/recipes/v2?type=public&q=${ingrediant}&app_id=6f7d5d7d&app_key=2106a213f50d52abc70d40a9956d371c&diet=${Diets}&health=${healthTypes}&cuisineType=${cuisine}&mealType=${meal}&dishType=${dish}&calories=${calories}&imageSize=REGULAR&random=true&field=image&field=calories&field=totalNutrients&field=uri&field=label`).then(\r\n                response=> response.json()\r\n            ).then(data=>setData(data.hits))\r\n        }\r\n        console.log(data);\r\n        \r\n        const theme = useTheme();\r\n        const [ingrediant,setIngrediant]=useState('');\r\n        const[calories,setCalories]=useState('')\r\n        const [healthTypes, sethealthTypes] = useState([]);\r\n        const [Diets, setDiets] = useState([]);\r\n        const [meal, setMeal] = useState([]);\r\n        const [dish, setDish] = useState([]);\r\n        const [cuisine, setCuisine] = useState([]);\r\n        \r\n         const handleChangeingr= (e)=>{\r\n            const {target:{\r\n                value\r\n            },}=e;\r\n            setIngrediant(value)\r\n         }\r\n\r\n         const handleChangecalories= (e)=>{\r\n            const {target:{\r\n                value\r\n            },}=e;\r\n            setCalories(value)\r\n         }\r\n      \r\n        const handleChangehealth = (event) => {\r\n          const {\r\n            target: { value },\r\n          } = event;\r\n          sethealthTypes(\r\n            // On autofill we get a stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n          );\r\n        };\r\n        const handleChangediets = (event) => {\r\n            const {\r\n              target: { value },\r\n            } = event;\r\n            setDiets(\r\n              // On autofill we get a stringified value.\r\n              typeof value === 'string' ? value.split(',') : value,\r\n            );\r\n          };\r\n          const handleChangemeal = (event) => {\r\n            const {\r\n              target: { value },\r\n            } = event;\r\n            setMeal(\r\n              // On autofill we get a stringified value.\r\n              value\r\n            );\r\n          };\r\n          const handleChangeDish = (event) => {\r\n            const {\r\n              target: { value },\r\n            } = event;\r\n            setDish(\r\n              // On autofill we get a stringified value.\r\n              value\r\n            );\r\n          };\r\n          const handleCusine = (event) => {\r\n            const {\r\n              target: { value },\r\n            } = event;\r\n            setCuisine(\r\n              // On autofill we get a stringified value.\r\n             value\r\n            );\r\n          };\r\n      \r\n      return (\r\n        \r\n        <div>\r\n       <Typography fontWeight={50} sx={{fontSize:{lg:'30px',xs:'20px'}}} mt='50px'textAlign={\"center\"}>Specify your diet details</Typography>\r\n      <FormControl sx={{ m: 1, width: 300, mt: 3 }}>\r\n\r\n      <TextField\r\n          sx={{\r\n            input:{\r\n                fontWeight:'700',\r\n                border:'none',\r\n                borderRadius:'4px',\r\n                \r\n            },\r\n            width:{lg:'400px',xs:\"350px\"},\r\n            backgroundColor:'#fff',\r\n            borderRadius:\"40px\",\r\n            mx: 'auto',\r\n            ml:60,\r\n            mb:5,\r\n            mt:2,\r\n          textAlign: 'center',\r\n          fontSize: '0.875rem',\r\n          fontWeight: '700'\r\n        }}\r\n          required\r\n          id=\"outlined-required\"\r\n          label=\"Major Ingrediant\"\r\n          type=\"text\"\r\n          onChange={handleChangeingr}\r\n          name=\"ingrediant\"\r\n          placeholder='Enter major ingrediant'\r\n        /><br/>\r\n        <TextField\r\n          sx={{\r\n            input:{\r\n                fontWeight:'700',\r\n                border:'none',\r\n                borderRadius:'4px',\r\n                \r\n            },\r\n            width:{lg:'400px',xs:\"350px\"},\r\n            backgroundColor:'#fff',\r\n            borderRadius:\"40px\",\r\n            mx: 'auto',\r\n            ml:60,\r\n            mb:5,\r\n            mt:2,\r\n          textAlign: 'center',\r\n          fontSize: '0.875rem',\r\n          fontWeight: '700'\r\n        }}\r\n          required\r\n          id=\"outlined-required\"\r\n          label=\"Calories\"\r\n          type=\"text\"\r\n          onChange={handleChangecalories}\r\n          name=\"calories\"\r\n          placeholder='Required calories'\r\n        /><br/>\r\n        <Select\r\n        sx={{\r\n            input:{\r\n                fontWeight:'700',\r\n                border:'none',\r\n                borderRadius:'4px',\r\n                \r\n            },\r\n            width:{lg:'400px',xs:\"350px\"},\r\n            backgroundColor:'#fff',\r\n            borderRadius:\"40px\",\r\n            mx: 'auto',\r\n            ml:60,\r\n            mb:5,\r\n            mt:2,\r\n          textAlign: 'center',\r\n          fontSize: '0.875rem',\r\n          fontWeight: '700'\r\n        }}\r\n          multiple\r\n          displayEmpty\r\n          value={healthTypes}\r\n          onChange={handleChangehealth}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>Allergies/healthTypes</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>Allergies/healthTypes</em>\r\n          </MenuItem>\r\n          {health.map((health) => (\r\n            <MenuItem\r\n              key={health}\r\n              value={health}\r\n              style={getStyles(health, healthTypes, theme)}\r\n            >\r\n              {health}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        <Select\r\n        sx={{\r\n            input:{\r\n                fontWeight:'700',\r\n                border:'none',\r\n                borderRadius:'4px',\r\n                \r\n            },\r\n            width:{lg:'400px',xs:\"350px\"},\r\n            backgroundColor:'#fff',\r\n            borderRadius:\"40px\",\r\n            mx: 'auto',\r\n            ml:60,\r\n            mb:5,\r\n            mt:2,\r\n          textAlign: 'center',\r\n          fontSize: '0.875rem',\r\n          fontWeight: '700'\r\n        }}\r\n          multiple\r\n          displayEmpty\r\n          value={Diets}\r\n          onChange={handleChangediets}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>DietTypes</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>DietTypes</em>\r\n          </MenuItem>\r\n          {diets.map((diet) => (\r\n            <MenuItem\r\n              key={diet}\r\n              value={diet}\r\n              style={getStyles(diet, Diets, theme)}\r\n            >\r\n              {diet}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n\r\n        <Select\r\n        sx={{\r\n            input:{\r\n                fontWeight:'700',\r\n                border:'none',\r\n                borderRadius:'4px',\r\n                \r\n            },\r\n            width:{lg:'400px',xs:\"350px\"},\r\n            backgroundColor:'#fff',\r\n            borderRadius:\"40px\",\r\n            mx: 'auto',\r\n            ml:60,\r\n            mb:5,\r\n            mt:2,\r\n          textAlign: 'center',\r\n          fontSize: '0.875rem',\r\n          fontWeight: '700'\r\n        }}\r\n          multiple\r\n          displayEmpty\r\n          value={meal}\r\n          onChange={handleChangemeal}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>MealTypes</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>MealTypes</em>\r\n          </MenuItem>\r\n          {mealType.map((meal) => (\r\n            <MenuItem\r\n              key={meal}\r\n              value={meal}\r\n              style={getStyles(meal, mealType, theme)}\r\n            >\r\n              {meal}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n\r\n        <Select\r\n        sx={{\r\n            input:{\r\n                fontWeight:'700',\r\n                border:'none',\r\n                borderRadius:'4px',\r\n                \r\n            },\r\n            width:{lg:'400px',xs:\"350px\"},\r\n            backgroundColor:'#fff',\r\n            borderRadius:\"40px\",\r\n            mx: 'auto',\r\n            ml:60,\r\n            mb:5,\r\n            mt:2,\r\n          textAlign: 'center',\r\n          fontSize: '0.875rem',\r\n          fontWeight: '700'\r\n        }}\r\n          multiple\r\n          displayEmpty\r\n          value={dish}\r\n          onChange={handleChangeDish}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>dishType</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>dishType</em>\r\n          </MenuItem>\r\n          {dishType.map((dish) => (\r\n            <MenuItem\r\n              key={dish}\r\n              value={dish}\r\n              style={getStyles(dish, dishType, theme)}\r\n            >\r\n              {dish}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n        <Select\r\n        sx={{\r\n            input:{\r\n                fontWeight:'700',\r\n                border:'none',\r\n                borderRadius:'4px',\r\n                \r\n            },\r\n            width:{lg:'400px',xs:\"350px\"},\r\n            backgroundColor:'#fff',\r\n            borderRadius:\"40px\",\r\n            mx: 'auto',\r\n            ml:60,\r\n            mb:5,\r\n            mt:2,\r\n          textAlign: 'center',\r\n          fontSize: '0.875rem',\r\n          fontWeight: '700'\r\n        }}\r\n          multiple\r\n          displayEmpty\r\n          value={cuisine}\r\n          onChange={handleCusine}\r\n          input={<OutlinedInput />}\r\n          renderValue={(selected) => {\r\n            if (selected.length === 0) {\r\n              return <em>cuisineType</em>;\r\n            }\r\n\r\n            return selected.join(', ');\r\n          }}\r\n          MenuProps={MenuProps}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n          <MenuItem disabled value=\"\">\r\n            <em>cuisineType</em>\r\n          </MenuItem>\r\n          {cuisineType.map((cuisine) => (\r\n            <MenuItem\r\n              key={cuisine}\r\n              value={cuisine}\r\n              style={getStyles(cuisine, cuisineType, theme)}\r\n            >\r\n              {cuisine}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n\r\n      <Box textAlign={'center'} ml={60}>\r\n      <Button variant='contained' mb={3} sx={{backgroundColor:'#7EC8E3',padding:'150',width:{lg:'400px',xs:\"300px\"}}}onClick={submitHandler}>GET RECEIPES</Button>\r\n      </Box>\r\n      </FormControl>\r\n     { data?.length >= 1?<Typography \r\n    justifyContent={'center'}\r\n    mt=\"10px\"\r\n    p=\"20px\">Showing results</Typography>:''}\r\n      {data?.length >= 1 ? <Recipes data={data}/>:null}\r\n      \r\n    </div>\r\n      )\r\n    }\r\n    \r\n    export default ReceipeSearch","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Recipes.js",["199","200","201","202","203","204","205","206"],[],"import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\nimport { Box } from '@mui/material';\r\n\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: theme.transitions.create('transform', {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n  \r\n\r\nconst Recipes = ({data}) => {\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n    const Item = styled(Paper)(({ theme }) => ({\r\n        backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n        ...theme.typography.body2,\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n      }));\r\n     \r\n  \r\n  return (\r\n   \r\n    <Stack direction=\"row\" sx={{gap:{lg:'110px',xs:'50px'}}} flexWrap=\"wrap\" justifyContent=\"center\">\r\n    {data.map(data=>\r\n       <Card sx={{ maxWidth: 350}}>\r\n       <CardHeader\r\n         title={data.recipe.label}\r\n         subheader={\"Total Calories \"+data.recipe.calories+\" g\"}\r\n       />\r\n       <CardMedia\r\n         component=\"img\"\r\n         height=\"210\"\r\n         image={data.recipe.image}\r\n         alt=\"Paella dish\"\r\n       />\r\n       <CardActions disableSpacing>\r\n         <ExpandMore\r\n           expand={expanded}\r\n           onClick={handleExpandClick}\r\n           aria-expanded={expanded}\r\n           aria-label=\"show more\"\r\n         >\r\n           <ExpandMoreIcon />\r\n         </ExpandMore>\r\n       </CardActions>\r\n       <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n         <CardContent>\r\n         <Typography>\r\n         Calories from carbohydrates<br/>\r\n         {data.recipe.totalNutrients.CHOCDF.quantity} kcal<br/>\r\n         Total Energy<br/>\r\n         {data.recipe.totalNutrients.ENERC_KCAL.quantity} kcal<br/>\r\n         <Typography variant='h5'>Fatty acids<br/></Typography>\r\n         --- {data.recipe.totalNutrients.FAMS.label}<br/>\r\n         --- {data.recipe.totalNutrients.FAMS.quantity} g<br/>\r\n         --- {data.recipe.totalNutrients.FAPU.label} <br/>\r\n         --- {data.recipe.totalNutrients.FAPU.quantity} g<br/>\r\n         --- {data.recipe.totalNutrients.FASAT.label}<br/>\r\n         --- {data.recipe.totalNutrients.FASAT.quantity} g<br/>\r\n         <Typography variant='h5'>Cholestrol<br/></Typography>\r\n         {data.recipe.totalNutrients.CHOLE.quantity} {data.recipe.totalNutrients.CHOLE.unit}\r\n         <Typography variant='h5'>Fiber<br/></Typography>\r\n         {data.recipe.totalNutrients.FIBTG.quantity} {data.recipe.totalNutrients.FIBTG.unit}\r\n        </Typography>\r\n         </CardContent>\r\n       </Collapse>\r\n     </Card>\r\n    )}\r\n</Stack>\r\n    \r\n  )\r\n}\r\n\r\nexport default Recipes","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Profile.js",["207","208"],[],"import React from 'react'\r\nimport { styled } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\nimport { Button } from '@mui/material';\r\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\r\n\r\n\r\nconst Img = styled('img')({\r\n  margin: 'auto',\r\n  display: 'block',\r\n  maxWidth: '100%',\r\n  maxHeight: '100%',\r\n});\r\n\r\n\r\nconst Profile = ({user}) => {\r\n  \r\n \r\n  return (\r\n      <Paper\r\n        sx={{\r\n          p: 2,\r\n          margin: 'auto',\r\n          maxWidth: 500,\r\n          flexGrow: 1,\r\n          backgroundColor: (theme) =>\r\n            theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n        }}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <ButtonBase sx={{ width: 128, height: 128 }}>\r\n              <Img alt=\"complex\" src=\"https://cdn-icons-png.flaticon.com/512/3607/3607444.png\" />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container>\r\n            <Grid item xs container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\r\n                  Name : {user.name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                 Email : {user.email}\r\n                </Typography>\r\n              </Grid>\r\n            \r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n  )\r\n}\r\n\r\nexport default Profile","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Myprofile.js",[],[],"C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\HorizontalScrollbar.js",["209"],[],"import React from 'react'\r\nimport { Box } from '@mui/material'\r\nimport BodyPart from './BodyPart'\r\nimport {ScrollMenu,visibilityContext} from 'react-horizontal-scrolling-menu'\r\n\r\nconst HorizontalScrollbar = ({data,bodyPart,setBodyPart}) => {\r\n  return (\r\n    <ScrollMenu>\r\n        {data.map((item)=>(\r\n        <Box\r\n        key={item.id||item}\r\n        itemId={item.id||item}\r\n        title={item.id||item}\r\n        m=\"0 40px\"\r\n        >\r\n            <BodyPart item={item} bodyPart={bodyPart} setBodyPart={setBodyPart}/>\r\n\r\n        </Box>\r\n    \r\n    ))}\r\n    </ScrollMenu>\r\n\r\n   \r\n    \r\n  )\r\n}\r\n\r\nexport default HorizontalScrollbar","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\BodyPart.js",["210"],[],"import React from 'react'\r\nimport {Stack,Typography} from '@mui/material'\r\nimport Icon from '../assets/icon.png'\r\n\r\nconst BodyPart = ({item,setBodyPart,bodyPart}) => {\r\n  return (\r\n    <Stack\r\n    type=\"button\"\r\n    alignItems=\"center\"\r\n    justifyContent=\"center\"\r\n    className=\"bodyPart-card\"\r\n    sx={{\r\n           borderTop :bodyPart === item ? '4px solid #7EC8E3' : '',\r\n           backgroundColor:'#fff',\r\n           borderBottomLeftRadius:'20px',\r\n           width:'270px',\r\n           height:'280px',\r\n           cursor:'pointer',\r\n           gap:'47px'\r\n    }} \r\n    onClick={()=>{\r\n        setBodyPart(item);\r\n        window.scrollTo({top:1800,left:100,behavior:'smooth'})\r\n    }}\r\n    \r\n>\r\n        <img src=\"https://i.pinimg.com/736x/a6/e6/7c/a6e67c08f1f447bcb2505ed8466478ab.jpg\" alt=\"dumbbell\" style={{width:'40px',height:'40px'}}/>\r\n\r\n        <Typography fontSize=\"24px\" fontWeight=\"bold\" color=\"#3A1212\" textTransform=\"capitalize\">{item}</Typography>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default BodyPart","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\ExerciseCard.js",[],[],"C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Calorielogs.js",["211"],[],"import { InputLabel, TextField, Typography, Box, Button } from '@mui/material'\r\nimport axios from 'axios';\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nconst labelStyles={mb:1,mt:2,fontSize:'24px',fontWeight:\"bold\"};\r\nconst Calorielogs = () => {\r\n  const navigate = useNavigate();\r\n  const[inputs, setInputs] = useState({\r\n                activity:\"\",\r\n                duration:\"\",\r\n                weight:\"\",\r\n                date:\"\",\r\n                burnedcal:\"\",\r\n});\r\nconst handleChange=(e)=>{\r\n  setInputs((prevState)=>({\r\n    ...prevState,\r\n    [e.target.name]:e.target.value\r\n  }));\r\n}\r\nconst sendRequest = async()=>{\r\n  const res=await axios.post(\"http://localhost:5000/Calorielogs\",\r\n  {\r\n                activity:inputs.activity,\r\n                duration:inputs.duration,\r\n                weight:inputs.weight,\r\n                date:inputs.date,\r\n                burnedcal:inputs.weight,\r\n                user:localStorage.getItem(\"userId\")\r\n  }).then(()=>navigate(\"/calorieslog\")).catch((err)=>console.log(err));\r\n  const data = await res.data;\r\n  console.log(data)\r\n  return data;\r\n};\r\nconst handleSubmit=(e)=>{\r\n  e.preventDefault();\r\n  //console.log(inputs);\r\n  sendRequest().then(data=>console.log(data))\r\n} \r\nconst onClickhandler=(e)=>{\r\n  navigate(\"/calorieslog\");\r\n}\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n      {/* activity:\"\",\r\n                duration:\"\",\r\n                weight:\"\",\r\n                date:\"\",\r\n                burnedcal:\"\", */}\r\n      <Box border={3} borderColor=\"purple \" borderRadius={10} boxShadow=\"10px 10px 20px #ccc\" padding={3} margin={\"auto\"} marginTop={3} display=\"flex\" flexDirection={\"column\"} width={\"80%\"}>\r\n        <Typography fontWeight={'bold'} padding={3} color=\"grey\" variant=\"h2\" textAlign={'center'}>Start logging your Calories</Typography>\r\n        <InputLabel sx={labelStyles}>Activity</InputLabel>\r\n        <TextField name=\"activity\" onChange={handleChange} value={inputs.activity}margin=\"normal\" variant='outlined'/>\r\n        <InputLabel sx={labelStyles}>Duration</InputLabel>\r\n        <TextField name=\"duration\" onChange={handleChange} value={inputs.duration} margin=\"normal\"variant='outlined'/>\r\n        <InputLabel sx={labelStyles}>Weight</InputLabel>\r\n        <TextField name=\"weight\" onChange={handleChange} value={inputs.weight} margin=\"normal\"variant='outlined' />\r\n        <InputLabel sx={labelStyles}>date</InputLabel>\r\n        <TextField name=\"date\" onChange={handleChange} value={inputs.date} margin=\"normal\"variant='outlined' />\r\n        <InputLabel sx={labelStyles}>Calories Burned</InputLabel>\r\n        <TextField name=\"burnedcal\" onChange={handleChange} value={inputs.burdencal} margin=\"normal\"variant='outlined' />\r\n        <Box>\r\n        <Button variant='contained' ml={40}  sx={{backgroundColor:'#7EC8E3',padding:'150', width:{lg:'320px',xs:\"300px\"},}} type=\"submit\">Add</Button>\r\n        <Button variant='contained' mr={40} sx={{backgroundColor:'#7EC8E3',padding:'200', width:{lg:'320px',xs:\"300px\"},}} onClick={onClickhandler} >Go to my Calorielogs</Button>\r\n        <Button variant='contained' ml={40}  sx={{backgroundColor:'#7EC8E3',padding:'150', width:{lg:'320px',xs:\"300px\"},}}  href=\"nutritionanalysis\">Go to calories Analysis</Button><br/>\r\n        </Box>\r\n        \r\n      </Box>\r\n    </form>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Calorielogs","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\Calorielog.js",["212"],[],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport MyFoodlogs from './MyFoodlogs';\r\nimport { Stack } from '@mui/material';\r\nimport MyCalorielogs from './MyCalorielogs';\r\n\r\nconst Calorielog = () => {\r\n  const[user,setUser]=useState()\r\n  // const id=localStorage.getItem(\"userId\");\r\n  \r\n  const sendRequest=async()=>{\r\n    const res=await axios.get(`http://localhost:5000/mycalorielogs`,{\r\n        headers:{\r\n            'x-token': localStorage.getItem(\"usertoken\")\r\n        }\r\n    }).catch((err)=>console.log(err))\r\n    const data= await res.data;\r\n    console.log(data)\r\n    return data\r\n  }\r\n  useEffect(()=>{ \r\n    sendRequest().then((data)=>setUser(data.user))\r\n  },[]);\r\n\r\n \r\n  return (\r\n\r\n    \r\n    <Stack direction=\"row\" sx={{gap:{lg:'50px',xs:'25px'}}} flexWrap=\"wrap\" justifyContent=\"center\">\r\n      {\" \"}\r\n      {user &&\r\n        user.calorielogs &&\r\n        user.calorielogs.map((calorielog, index) => (\r\n          <MyCalorielogs\r\n           id={calorielog._id}\r\n            key={index}\r\n            isUser={true}\r\n            activity={calorielog.activity}\r\n            duration={calorielog.duration}\r\n            weight={calorielog.weight}\r\n            burnedcal={calorielog.burnedcal}\r\n            date={calorielog.date}\r\n          />\r\n        ))}\r\n       \r\n    </Stack>\r\n  )\r\n};\r\nexport default Calorielog","C:\\Users\\hp\\GFGHACKATHON\\client\\src\\components\\MyCalorielogs.js",["213"],[],"import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\nimport { Button } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'\r\n\r\nconst Img = styled('img')({\r\n  margin: 'auto',\r\n  display: 'block',\r\n  maxWidth: '100%',\r\n  maxHeight: '100%',\r\n});\r\n\r\n\r\nconst MyFoodlogs = ({activity,duration,weight,burnedcal,date,isUser,id}) => {\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n    \r\n  const navigate = useNavigate();\r\n  const deleteRequest= async ()=>{\r\n    const res = await axios.delete(`http://localhost:5000/deletecalorielog/${id}`).catch(err=>console.log(err));\r\n    const data = await res.data;\r\n    return data\r\n  }\r\n  const handleDelete = ()=>{\r\n    deleteRequest().then(()=>navigate(\"/\")).then(()=>navigate(\"/calorieslog\"));\r\n  }\r\n  \r\n  return (\r\n    \r\n    <Paper\r\n    sx={{\r\n      p: 2,\r\n      margin: 'auto',\r\n      maxWidth: 500,\r\n      mb: 10,\r\n      ml: 10,\r\n      flexGrow: 1,\r\n      backgroundColor: (theme) =>\r\n        theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    }}\r\n  >\r\n   \r\n    <Grid container spacing={2}>\r\n      <Grid item>\r\n        <ButtonBase sx={{ width: 128, height: 128 }}>\r\n          <Img alt=\"complex\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRq7-PiOk-lsFvH34bYmrKj2xCdBRQB1V5SnZ6j8Ij7KA&usqp=CAU&ec=48665701\" />\r\n        </ButtonBase>\r\n      </Grid>\r\n      <Grid item xs={12} sm container>\r\n        <Grid item xs container direction=\"column\" spacing={2}>\r\n          <Grid item xs>\r\n            <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\r\n              {activity} {weight}\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n             {duration}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n             {burnedcal}Calories<br/>\r\n             {date}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant='contained' ml={40}  sx={{backgroundColor:'#7EC8E3',padding:'150', width:{lg:'200px',xs:\"100px\"},}} onClick={handleDelete}>Remove</Button><br/>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  </Paper>\r\n\r\n\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default MyFoodlogs;",{"ruleId":"214","severity":1,"message":"215","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":14},{"ruleId":"214","severity":1,"message":"218","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":18},{"ruleId":"219","severity":1,"message":"220","line":32,"column":56,"nodeType":"221","messageId":"222","endLine":33,"endColumn":9},{"ruleId":"219","severity":1,"message":"220","line":33,"column":54,"nodeType":"221","messageId":"222","endLine":34,"endColumn":9},{"ruleId":"214","severity":1,"message":"223","line":11,"column":9,"nodeType":"216","messageId":"217","endLine":11,"endColumn":17},{"ruleId":"214","severity":1,"message":"224","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":16},{"ruleId":"214","severity":1,"message":"225","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":28,"column":5,"nodeType":"228","endLine":28,"endColumn":15,"suggestions":"229"},{"ruleId":"214","severity":1,"message":"230","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":35},{"ruleId":"214","severity":1,"message":"231","line":4,"column":10,"nodeType":"216","messageId":"217","endLine":4,"endColumn":23},{"ruleId":"226","severity":1,"message":"232","line":19,"column":7,"nodeType":"228","endLine":19,"endColumn":9,"suggestions":"233"},{"ruleId":"214","severity":1,"message":"234","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":13},{"ruleId":"214","severity":1,"message":"235","line":8,"column":10,"nodeType":"216","messageId":"217","endLine":8,"endColumn":18},{"ruleId":"214","severity":1,"message":"236","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":13},{"ruleId":"214","severity":1,"message":"237","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":13},{"ruleId":"214","severity":1,"message":"238","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":12},{"ruleId":"239","severity":1,"message":"240","line":29,"column":65,"nodeType":"241","messageId":"242","endLine":29,"endColumn":66},{"ruleId":"214","severity":1,"message":"215","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"243","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":17},{"ruleId":"214","severity":1,"message":"244","line":9,"column":9,"nodeType":"216","messageId":"217","endLine":9,"endColumn":19},{"ruleId":"214","severity":1,"message":"235","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":18},{"ruleId":"214","severity":1,"message":"245","line":6,"column":22,"nodeType":"216","messageId":"217","endLine":6,"endColumn":32},{"ruleId":"214","severity":1,"message":"234","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":13},{"ruleId":"226","severity":1,"message":"246","line":19,"column":3,"nodeType":"228","endLine":19,"endColumn":5,"suggestions":"247"},{"ruleId":"214","severity":1,"message":"248","line":5,"column":23,"nodeType":"216","messageId":"217","endLine":5,"endColumn":32},{"ruleId":"214","severity":1,"message":"249","line":21,"column":12,"nodeType":"216","messageId":"217","endLine":21,"endColumn":23},{"ruleId":"214","severity":1,"message":"250","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":13},{"ruleId":"214","severity":1,"message":"234","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":13},{"ruleId":"214","severity":1,"message":"237","line":8,"column":9,"nodeType":"216","messageId":"217","endLine":8,"endColumn":14},{"ruleId":"214","severity":1,"message":"251","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":18},{"ruleId":"214","severity":1,"message":"252","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":14},{"ruleId":"214","severity":1,"message":"253","line":12,"column":10,"nodeType":"216","messageId":"217","endLine":12,"endColumn":13},{"ruleId":"214","severity":1,"message":"254","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":20},{"ruleId":"214","severity":1,"message":"255","line":14,"column":8,"nodeType":"216","messageId":"217","endLine":14,"endColumn":17},{"ruleId":"214","severity":1,"message":"256","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":20},{"ruleId":"214","severity":1,"message":"257","line":8,"column":9,"nodeType":"216","messageId":"217","endLine":8,"endColumn":14},{"ruleId":"214","severity":1,"message":"237","line":18,"column":9,"nodeType":"216","messageId":"217","endLine":18,"endColumn":14},{"ruleId":"214","severity":1,"message":"252","line":9,"column":8,"nodeType":"216","messageId":"217","endLine":9,"endColumn":14},{"ruleId":"214","severity":1,"message":"253","line":12,"column":10,"nodeType":"216","messageId":"217","endLine":12,"endColumn":13},{"ruleId":"214","severity":1,"message":"254","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":20},{"ruleId":"214","severity":1,"message":"255","line":14,"column":8,"nodeType":"216","messageId":"217","endLine":14,"endColumn":17},{"ruleId":"214","severity":1,"message":"256","line":16,"column":8,"nodeType":"216","messageId":"217","endLine":16,"endColumn":20},{"ruleId":"214","severity":1,"message":"258","line":17,"column":8,"nodeType":"216","messageId":"217","endLine":17,"endColumn":12},{"ruleId":"214","severity":1,"message":"259","line":20,"column":10,"nodeType":"216","messageId":"217","endLine":20,"endColumn":13},{"ruleId":"214","severity":1,"message":"260","line":41,"column":11,"nodeType":"216","messageId":"217","endLine":41,"endColumn":15},{"ruleId":"214","severity":1,"message":"261","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":16},{"ruleId":"214","severity":1,"message":"262","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":24},{"ruleId":"214","severity":1,"message":"263","line":4,"column":20,"nodeType":"216","messageId":"217","endLine":4,"endColumn":37},{"ruleId":"214","severity":1,"message":"264","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":12},{"ruleId":"214","severity":1,"message":"248","line":5,"column":23,"nodeType":"216","messageId":"217","endLine":5,"endColumn":32},{"ruleId":"214","severity":1,"message":"218","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":18},{"ruleId":"214","severity":1,"message":"249","line":21,"column":12,"nodeType":"216","messageId":"217","endLine":21,"endColumn":23},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'MyFoodlogs' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","'navigate' is assigned a value but never used.","'Register' is defined but never used.","'Dashboard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setExercises'. Either include it or remove the dependency array. If 'setExercises' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["265"],"'useInsertionEffect' is defined but never used.","'textTransform' is defined but never used.","React Hook useEffect has a missing dependency: 'bodyParts'. Either include it or remove the dependency array.",["266"],"'Login' is defined but never used.","'redirect' is defined but never used.","'Alert' is defined but never used.","'Stack' is defined but never used.","'Home' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'sideimage' is defined but never used.","'Typography' is defined but never used.","'deepPurple' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["267"],"'useParams' is defined but never used.","'refreshPage' is defined but never used.","'axios' is defined but never used.","'CardHeader' is defined but never used.","'Avatar' is defined but never used.","'red' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'MoreVertIcon' is defined but never used.","'react' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'Item' is assigned a value but never used.","'Button' is defined but never used.","'EditOutlinedIcon' is defined but never used.","'visibilityContext' is defined but never used.","'Icon' is defined but never used.",{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},"Update the dependencies array to be: [bodyPart, setExercises]",{"range":"274","text":"275"},"Update the dependencies array to be: [bodyParts]",{"range":"276","text":"277"},"Update the dependencies array to be: [token]",{"range":"278","text":"279"},[1136,1146],"[bodyPart, setExercises]",[839,841],"[bodyParts]",[677,679],"[token]"]